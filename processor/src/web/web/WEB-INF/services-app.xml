<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012. Axetta LLC. All Rights Reserved.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <jee:jndi-lookup id="processorPU" jndi-name="java:/processorPUFactory"/>
    <jee:jndi-lookup id="reportsPU" jndi-name="java:/reportsPUFactory"/>

<!--    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
      <property name="persistenceUnitName" value="processor"/>
    </bean>-->

    <!-- Let's access the JTA transaction manager of the application server -->
    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="processorPU"/>
        <!--<property name="transactionManagerName" value="java:jboss/TransactionManager"/>
        <property name="userTransactionName" value="java:jboss/UserTransaction"/>-->
    </bean>
    <bean id="txManagerReports" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="reportsPU"/>
    </bean>

<!--    <jee:jndi-lookup id="dataSource" jndi-name="java:jboss/PostgresDS"/>-->


<!--    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="loadTimeWeaver">
            <bean
                class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
        </property>
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            </bean>
        </property>
    </bean>

    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory"
            ref="entityManagerFactory" />
    </bean>-->

    <task:annotation-driven/>
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
    <tx:annotation-driven transaction-manager="txManagerReports" proxy-target-class="true"/>

    <context:component-scan base-package="ru.axetta.ecafe.processor"/>

    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="maintananceService" method="run" fixed-delay="600000" />
        <task:scheduled ref="transactionJournalService" method="processTransactionJournalQueue" fixed-delay="10000"/>
        <task:scheduled ref="projectStateReportService" method="run" cron="0 20 4 ? * *"/>
        <!--        <task:scheduled ref="MSRStopListLoader" method="initCards" fixed-delay="45000" />-->
        <task:scheduled ref="BIDataExportService" method="run" cron="0 5 0 ? * *" />
        <task:scheduled ref="RNIPLoadPaymentsService" method="run" fixed-delay="86400000" />
    </task:scheduled-tasks>
    <task:scheduler id="myScheduler" pool-size="5"/>


    <!--
    <task:scheduled-tasks scheduler="msrStoplistLoadScheduler">
        <task:scheduled ref="MSRStopListLoader" method="initCards" fixed-delay="15000" />
    </task:scheduled-tasks>
    <task:scheduler id="msrStoplistLoadScheduler" pool-size="5"/>


    <task:scheduled-tasks scheduler="msrStoplistParseScheduler">
        <task:scheduled ref="MSRStopListLoader" method="parseCards" fixed-delay="30000" />
    </task:scheduled-tasks>
    <task:scheduler id="msrStoplistParseScheduler" pool-size="5"/>


    <task:scheduled-tasks scheduler="biDataExportSchedule">
        <task:scheduled ref="BIDataExportService" method="run" fixed-delay="86400000" />
    </task:scheduled-tasks>
    <task:scheduler id="biDataExportSchedule" pool-size="5"/>-->


    <task:scheduler id="importRegisterClientsSchedule" pool-size="5"/>
    <task:scheduled-tasks scheduler="importRegisterClientsSchedule">
        <task:scheduled ref="importRegisterClientsService" method="run" cron="0 0 4 ? * *" />
    </task:scheduled-tasks>


    <task:scheduler id="benefitsRecalculationSchedule" pool-size="5"/>
    <task:scheduled-tasks scheduler="benefitsRecalculationSchedule">
        <task:scheduled ref="benefitsRecalculationService" method="run" cron="0 15 0 ? * *" />
    </task:scheduled-tasks>


    <task:scheduler id="cleanupRepositoryReportsSchedule" pool-size="5"/>
    <task:scheduled-tasks scheduler="cleanupRepositoryReportsSchedule">
        <task:scheduled ref="cleanupReportsService" method="run" cron="0 15 0 ? * *" />
    </task:scheduled-tasks>

    <task:scheduler id="clientsSMSSubscriptionFeeSchedule"/>
    <task:scheduled-tasks scheduler="clientsSMSSubscriptionFeeSchedule">
       <task:scheduled ref="smsSubscriptionFeeService" method="notifyClientsAboutSMSSubscriptionFee"
                        cron="0 0 16 26 * ?"/>
        <task:scheduled ref="smsSubscriptionFeeService" method="smsSubscriptionFeeWithdraw" cron="0 0 16 1-4 * ?"/>
    </task:scheduled-tasks>

    <!-- Оповещение клиента об недостатке средств в субсчет для оплаты АП, срабатывает каждый день в 16 часов вечера -->
    <task:scheduler id="subscriptionFeedingSchedule"/>
    <task:scheduled-tasks scheduler="subscriptionFeedingSchedule">
        <task:scheduled ref="subscriptionFeedingService" method="notifyClientsAboutSubscriptionFeeding" cron="0 0 16 * * ?"/>
    </task:scheduled-tasks>

    <!--<task:scheduler id="clientBalanceRefillSchedule"/>-->
    <!--<task:scheduled-tasks scheduler="clientBalanceRefillSchedule">-->
        <!--<task:scheduled ref="clientBalanceRefillService" method="checkClientBalances"-->
                        <!--cron="0 38 12 * * ?"/>-->
    <!--</task:scheduled-tasks>-->

    <!--<task:scheduler id="regularPaymentSchedule"/>-->
    <!--<task:scheduled-tasks scheduler="regularPaymentSchedule">-->
        <!--<task:scheduled ref="regularPaymentSubscriptionService" method="checkClientBalances"-->
                        <!--cron="0 0-59/5 17 11 * ?"/>-->
    <!--</task:scheduled-tasks>-->

    <!-- Оповещение контргента об изменении заявки, срабатывает каждве 20 минут-->
    <!--<task:scheduler id="goodRequestsSchedule"/>-->
    <!--<task:scheduled-tasks scheduler="goodRequestsSchedule">-->
        <!--<task:scheduled ref="goodRequestsNotificationService" method="notifyGoodRequestsReport"-->
                        <!--cron="0 0 * * * ?"/>-->
    <!--</task:scheduled-tasks>-->

</beans>