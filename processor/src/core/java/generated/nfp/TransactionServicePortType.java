
package generated.nfp;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.1-02/02/2007 03:56 AM(vivekp)-FCS
 * Generated source version: 2.1
 * 
 */
@WebService(name = "TransactionServicePortType", targetNamespace = "http://schemas.msk.ru/uec/TransactionService/v1")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    generated.nfp.ObjectFactory.class,
    generated.nfp.iso_001_001_03.ObjectFactory.class,
    generated.nfp.iso_008_001_02.ObjectFactory.class,
    generated.nfp.x3.ObjectFactory.class
})
public interface TransactionServicePortType {


    /**
     * Получение транзакций
     * 
     * @param parameters
     * @return
     *     returns generated.nfp.TransactionListType
     * @throws FaultResponse
     */
    @WebMethod(action = "urn:getTransactions")
    @WebResult(name = "getTransactionsResponse", targetNamespace = "http://schemas.msk.ru/uec/TransactionSynchronization/v1", partName = "transactionList")
    public TransactionListType getTransactions(
        @WebParam(name = "getTransactionsRequest", targetNamespace = "http://schemas.msk.ru/uec/TransactionSynchronization/v1", partName = "parameters")
        GetTransactionsRequest parameters)
        throws FaultResponse
    ;

    /**
     * Сброс транзакций
     * 
     * @param parameters
     * @return
     *     returns generated.nfp.ErrorListType
     * @throws FaultResponse
     */
    @WebMethod(action = "urn:storeTransactions")
    @WebResult(name = "storeTransactionsResponse", targetNamespace = "http://schemas.msk.ru/uec/TransactionSynchronization/v1", partName = "errors")
    public ErrorListType storeTransactions(
        @WebParam(name = "storeTransactionsRequest", targetNamespace = "http://schemas.msk.ru/uec/TransactionSynchronization/v1", partName = "parameters")
        TransactionListType parameters)
        throws FaultResponse
    ;

    /**
     * Получение транзакций по персоне
     * 
     * @param parameters
     * @return
     *     returns generated.nfp.TransactionListType
     * @throws FaultResponse
     */
    @WebMethod(action = "urn:getPersonTransactions")
    @WebResult(name = "getPersonTransactionsResponse", targetNamespace = "http://schemas.msk.ru/uec/TransactionService/v1", partName = "transactionList")
    public TransactionListType getPersonTransactions(
        @WebParam(name = "getPersonTransactionsRequest", targetNamespace = "http://schemas.msk.ru/uec/TransactionService/v1", partName = "parameters")
        GetPersonTransactionsRequest parameters)
        throws FaultResponse
    ;

    /**
     * Изменение тэгов транзакции
     * 
     * @param parameter
     * @return
     *     returns generated.nfp.ErrorListType
     * @throws FaultResponse
     */
    @WebMethod(action = "urn:storeTags")
    @WebResult(name = "storeTagsResponse", targetNamespace = "http://schemas.msk.ru/uec/TransactionSynchronization/v1", partName = "parameter")
    public ErrorListType storeTags(
        @WebParam(name = "storeTagsRequest", targetNamespace = "http://schemas.msk.ru/uec/TransactionSynchronization/v1", partName = "parameter")
        StoreTagsRequest parameter)
        throws FaultResponse
    ;

    /**
     * Запрос на сохранение списков рассылки
     * 
     * @param parameters
     * @return
     *     returns generated.nfp.ErrorListType
     * @throws FaultResponse
     */
    @WebMethod(action = "urn:storeNotificationSubscribers")
    @WebResult(name = "storeNotificationSubscribersResponse", targetNamespace = "http://schemas.msk.ru/uec/TransactionService/v1", partName = "errors")
    public ErrorListType storeNotificationSubscribers(
        @WebParam(name = "storeNotificationSubscribersRequest", targetNamespace = "http://schemas.msk.ru/uec/TransactionService/v1", partName = "parameters")
        SubscribtionListType parameters)
        throws FaultResponse
    ;

    /**
     * Запрос на сохранение тарифов
     * 
     * @param storeTariffsRequest
     * @return
     *     returns generated.nfp.ErrorListType
     * @throws FaultResponse
     */
    @WebMethod(action = "urn:storeTariffs")
    @WebResult(name = "storeTariffsResponse", targetNamespace = "http://schemas.msk.ru/uec/TransactionService/v1", partName = "errors")
    public ErrorListType storeTariffs(
        @WebParam(name = "storeTariffsRequest", targetNamespace = "http://schemas.msk.ru/uec/TransactionService/v1", partName = "storeTariffsRequest")
        StoreTariffsRequest storeTariffsRequest)
        throws FaultResponse
    ;

    /**
     * Запрос на получение тарификационных расчетов
     * 
     * @param parameters
     * @return
     *     returns generated.nfp.GetBillsResponseType
     * @throws FaultResponse
     */
    @WebMethod(action = "urn:getBills")
    @WebResult(name = "getBillsResponse", targetNamespace = "http://schemas.msk.ru/uec/TransactionService/v1", partName = "billsList")
    public GetBillsResponseType getBills(
        @WebParam(name = "getBillsRequest", targetNamespace = "http://schemas.msk.ru/uec/TransactionService/v1", partName = "parameters")
        GetBillsRequestType parameters)
        throws FaultResponse
    ;

}
