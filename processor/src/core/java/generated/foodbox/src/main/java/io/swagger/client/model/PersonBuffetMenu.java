/*
 * API по питанию в образовательных учреждениях Москвы
 * API по питанию в образовательных учреждениях Москвы
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BuffetCategory;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Персональное меню
 */
@Schema(description = "Персональное меню")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-13T21:55:36.524+03:00[Europe/Moscow]")public class PersonBuffetMenu {

  @SerializedName("categories")
  private List<BuffetCategory> categories = new ArrayList<BuffetCategory>();

  @SerializedName("buffetIsOpen")
  private Boolean buffetIsOpen = null;

  @SerializedName("buffetOpenAt")
  private String buffetOpenAt = null;

  @SerializedName("buffetCloseAt")
  private String buffetCloseAt = null;
  public PersonBuffetMenu categories(List<BuffetCategory> categories) {
    this.categories = categories;
    return this;
  }

  public PersonBuffetMenu addCategoriesItem(BuffetCategory categoriesItem) {
    this.categories.add(categoriesItem);
    return this;
  }

  /**
  * Список категорий меню
  * @return categories
  **/
  @Schema(required = true, description = "Список категорий меню")
  public List<BuffetCategory> getCategories() {
    return categories;
  }
  public void setCategories(List<BuffetCategory> categories) {
    this.categories = categories;
  }
  public PersonBuffetMenu buffetIsOpen(Boolean buffetIsOpen) {
    this.buffetIsOpen = buffetIsOpen;
    return this;
  }

  

  /**
  * Признак работы буфета, открыт или закрыт
  * @return buffetIsOpen
  **/
  @Schema(required = true, description = "Признак работы буфета, открыт или закрыт")
  public Boolean isBuffetIsOpen() {
    return buffetIsOpen;
  }
  public void setBuffetIsOpen(Boolean buffetIsOpen) {
    this.buffetIsOpen = buffetIsOpen;
  }
  public PersonBuffetMenu buffetOpenAt(String buffetOpenAt) {
    this.buffetOpenAt = buffetOpenAt;
    return this;
  }

  

  /**
  * Дата начала работы буфета
  * @return buffetOpenAt
  **/
  @Schema(required = true, description = "Дата начала работы буфета")
  public String getBuffetOpenAt() {
    return buffetOpenAt;
  }
  public void setBuffetOpenAt(String buffetOpenAt) {
    this.buffetOpenAt = buffetOpenAt;
  }
  public PersonBuffetMenu buffetCloseAt(String buffetCloseAt) {
    this.buffetCloseAt = buffetCloseAt;
    return this;
  }

  

  /**
  * Дата завершения работы буфета
  * @return buffetCloseAt
  **/
  @Schema(required = true, description = "Дата завершения работы буфета")
  public String getBuffetCloseAt() {
    return buffetCloseAt;
  }
  public void setBuffetCloseAt(String buffetCloseAt) {
    this.buffetCloseAt = buffetCloseAt;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonBuffetMenu personBuffetMenu = (PersonBuffetMenu) o;
    return Objects.equals(this.categories, personBuffetMenu.categories) &&
        Objects.equals(this.buffetIsOpen, personBuffetMenu.buffetIsOpen) &&
        Objects.equals(this.buffetOpenAt, personBuffetMenu.buffetOpenAt) &&
        Objects.equals(this.buffetCloseAt, personBuffetMenu.buffetCloseAt);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(categories, buffetIsOpen, buffetOpenAt, buffetCloseAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonBuffetMenu {\n");
    
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    buffetIsOpen: ").append(toIndentedString(buffetIsOpen)).append("\n");
    sb.append("    buffetOpenAt: ").append(toIndentedString(buffetOpenAt)).append("\n");
    sb.append("    buffetCloseAt: ").append(toIndentedString(buffetCloseAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
