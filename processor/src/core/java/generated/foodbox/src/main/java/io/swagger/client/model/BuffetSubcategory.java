/*
 * API по питанию в образовательных учреждениях Москвы
 * API по питанию в образовательных учреждениях Москвы
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Dish;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Подкатегория блюд
 */
@Schema(description = "Подкатегория блюд")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-13T21:55:36.524+03:00[Europe/Moscow]")public class BuffetSubcategory {

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("dishes")
  private List<Dish> dishes = new ArrayList<Dish>();
  public BuffetSubcategory id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * Идентификатор подкатегории
  * @return id
  **/
  @Schema(required = true, description = "Идентификатор подкатегории")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public BuffetSubcategory name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Название подкатегории
  * @return name
  **/
  @Schema(required = true, description = "Название подкатегории")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public BuffetSubcategory dishes(List<Dish> dishes) {
    this.dishes = dishes;
    return this;
  }

  public BuffetSubcategory addDishesItem(Dish dishesItem) {
    this.dishes.add(dishesItem);
    return this;
  }

  /**
  * Блюда в подкатегории
  * @return dishes
  **/
  @Schema(required = true, description = "Блюда в подкатегории")
  public List<Dish> getDishes() {
    return dishes;
  }
  public void setDishes(List<Dish> dishes) {
    this.dishes = dishes;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuffetSubcategory buffetSubcategory = (BuffetSubcategory) o;
    return Objects.equals(this.id, buffetSubcategory.id) &&
        Objects.equals(this.name, buffetSubcategory.name) &&
        Objects.equals(this.dishes, buffetSubcategory.dishes);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, dishes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuffetSubcategory {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dishes: ").append(toIndentedString(dishes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
