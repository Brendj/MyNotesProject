/*
 * API по питанию в образовательных учреждениях Москвы
 * API по питанию в образовательных учреждениях Москвы
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * Блюдо.
 */
@Schema(description = "Блюдо.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-13T21:55:36.524+03:00[Europe/Moscow]")public class Dish {

  @SerializedName("id")
  private Long id = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("price")
  private Long price = null;

  @SerializedName("ingredients")
  private String ingredients = null;

  @SerializedName("calories")
  private Integer calories = null;

  @SerializedName("weight")
  private String weight = null;

  @SerializedName("protein")
  private Integer protein = null;

  @SerializedName("fat")
  private Integer fat = null;

  @SerializedName("carbohydrates")
  private Integer carbohydrates = null;
  public Dish id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * Идентификатор блюда.
  * @return id
  **/
  @Schema(required = true, description = "Идентификатор блюда.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public Dish code(String code) {
    this.code = code;
    return this;
  }

  

  /**
  * Код блюда.
  * @return code
  **/
  @Schema(required = true, description = "Код блюда.")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }
  public Dish name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Название блюда.
  * @return name
  **/
  @Schema(required = true, description = "Название блюда.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public Dish price(Long price) {
    this.price = price;
    return this;
  }

  

  /**
  * Цена блюда в копейках.
  * @return price
  **/
  @Schema(required = true, description = "Цена блюда в копейках.")
  public Long getPrice() {
    return price;
  }
  public void setPrice(Long price) {
    this.price = price;
  }
  public Dish ingredients(String ingredients) {
    this.ingredients = ingredients;
    return this;
  }

  

  /**
  * Состав блюда.
  * @return ingredients
  **/
  @Schema(required = true, description = "Состав блюда.")
  public String getIngredients() {
    return ingredients;
  }
  public void setIngredients(String ingredients) {
    this.ingredients = ingredients;
  }
  public Dish calories(Integer calories) {
    this.calories = calories;
    return this;
  }

  

  /**
  * Калорийность блюда.
  * @return calories
  **/
  @Schema(required = true, description = "Калорийность блюда.")
  public Integer getCalories() {
    return calories;
  }
  public void setCalories(Integer calories) {
    this.calories = calories;
  }
  public Dish weight(String weight) {
    this.weight = weight;
    return this;
  }

  

  /**
  * Масса блюда в граммах.
  * @return weight
  **/
  @Schema(required = true, description = "Масса блюда в граммах.")
  public String getWeight() {
    return weight;
  }
  public void setWeight(String weight) {
    this.weight = weight;
  }
  public Dish protein(Integer protein) {
    this.protein = protein;
    return this;
  }

  

  /**
  * Белки.
  * @return protein
  **/
  @Schema(required = true, description = "Белки.")
  public Integer getProtein() {
    return protein;
  }
  public void setProtein(Integer protein) {
    this.protein = protein;
  }
  public Dish fat(Integer fat) {
    this.fat = fat;
    return this;
  }

  

  /**
  * Жиры.
  * @return fat
  **/
  @Schema(required = true, description = "Жиры.")
  public Integer getFat() {
    return fat;
  }
  public void setFat(Integer fat) {
    this.fat = fat;
  }
  public Dish carbohydrates(Integer carbohydrates) {
    this.carbohydrates = carbohydrates;
    return this;
  }

  

  /**
  * Углеводы.
  * @return carbohydrates
  **/
  @Schema(required = true, description = "Углеводы.")
  public Integer getCarbohydrates() {
    return carbohydrates;
  }
  public void setCarbohydrates(Integer carbohydrates) {
    this.carbohydrates = carbohydrates;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dish dish = (Dish) o;
    return Objects.equals(this.id, dish.id) &&
        Objects.equals(this.code, dish.code) &&
        Objects.equals(this.name, dish.name) &&
        Objects.equals(this.price, dish.price) &&
        Objects.equals(this.ingredients, dish.ingredients) &&
        Objects.equals(this.calories, dish.calories) &&
        Objects.equals(this.weight, dish.weight) &&
        Objects.equals(this.protein, dish.protein) &&
        Objects.equals(this.fat, dish.fat) &&
        Objects.equals(this.carbohydrates, dish.carbohydrates);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, code, name, price, ingredients, calories, weight, protein, fat, carbohydrates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dish {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    ingredients: ").append(toIndentedString(ingredients)).append("\n");
    sb.append("    calories: ").append(toIndentedString(calories)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    protein: ").append(toIndentedString(protein)).append("\n");
    sb.append("    fat: ").append(toIndentedString(fat)).append("\n");
    sb.append("    carbohydrates: ").append(toIndentedString(carbohydrates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
