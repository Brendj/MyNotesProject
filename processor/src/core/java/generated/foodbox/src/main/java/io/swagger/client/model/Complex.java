/*
 * API по питанию в образовательных учреждениях Москвы
 * API по питанию в образовательных учреждениях Москвы
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Dish;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Комплекс.
 */
@Schema(description = "Комплекс.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-13T21:55:36.524+03:00[Europe/Moscow]")public class Complex {

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("price")
  private Long price = null;

  @SerializedName("kind")
  private Integer kind = null;

  @SerializedName("paymentType")
  private Integer paymentType = null;

  @SerializedName("preorderAllowed")
  private Boolean preorderAllowed = null;

  @SerializedName("allowSelectItems")
  private Boolean allowSelectItems = null;

  @SerializedName("items")
  private List<Dish> items = null;
  public Complex id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * Идентификатор комплекса
  * @return id
  **/
  @Schema(required = true, description = "Идентификатор комплекса")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public Complex name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Название комплекса
  * @return name
  **/
  @Schema(required = true, description = "Название комплекса")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public Complex price(Long price) {
    this.price = price;
    return this;
  }

  

  /**
  * Цена комплекса в копейках
  * @return price
  **/
  @Schema(required = true, description = "Цена комплекса в копейках")
  public Long getPrice() {
    return price;
  }
  public void setPrice(Long price) {
    this.price = price;
  }
  public Complex kind(Integer kind) {
    this.kind = kind;
    return this;
  }

  

  /**
  * Вид рациона комплекса: 0 – не указан (не выводить), 1 – завтрак, 2 – обед, 3 – полдник, 4 - ужин
  * @return kind
  **/
  @Schema(required = true, description = "Вид рациона комплекса: 0 – не указан (не выводить), 1 – завтрак, 2 – обед, 3 – полдник, 4 - ужин")
  public Integer getKind() {
    return kind;
  }
  public void setKind(Integer kind) {
    this.kind = kind;
  }
  public Complex paymentType(Integer paymentType) {
    this.paymentType = paymentType;
    return this;
  }

  

  /**
  * Условия предоставления комплекса: 1 - льготно, 2 - платно, 3 - льготно и платно
  * @return paymentType
  **/
  @Schema(description = "Условия предоставления комплекса: 1 - льготно, 2 - платно, 3 - льготно и платно")
  public Integer getPaymentType() {
    return paymentType;
  }
  public void setPaymentType(Integer paymentType) {
    this.paymentType = paymentType;
  }
  public Complex preorderAllowed(Boolean preorderAllowed) {
    this.preorderAllowed = preorderAllowed;
    return this;
  }

  

  /**
  * Доступен для предзаказа
  * @return preorderAllowed
  **/
  @Schema(description = "Доступен для предзаказа")
  public Boolean isPreorderAllowed() {
    return preorderAllowed;
  }
  public void setPreorderAllowed(Boolean preorderAllowed) {
    this.preorderAllowed = preorderAllowed;
  }
  public Complex allowSelectItems(Boolean allowSelectItems) {
    this.allowSelectItems = allowSelectItems;
    return this;
  }

  

  /**
  * Признак возможности выбора отдельных блюд составного комплекса
  * @return allowSelectItems
  **/
  @Schema(description = "Признак возможности выбора отдельных блюд составного комплекса")
  public Boolean isAllowSelectItems() {
    return allowSelectItems;
  }
  public void setAllowSelectItems(Boolean allowSelectItems) {
    this.allowSelectItems = allowSelectItems;
  }
  public Complex items(List<Dish> items) {
    this.items = items;
    return this;
  }

  public Complex addItemsItem(Dish itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<Dish>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
  * Список блюд составного комплекса
  * @return items
  **/
  @Schema(description = "Список блюд составного комплекса")
  public List<Dish> getItems() {
    return items;
  }
  public void setItems(List<Dish> items) {
    this.items = items;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Complex complex = (Complex) o;
    return Objects.equals(this.id, complex.id) &&
        Objects.equals(this.name, complex.name) &&
        Objects.equals(this.price, complex.price) &&
        Objects.equals(this.kind, complex.kind) &&
        Objects.equals(this.paymentType, complex.paymentType) &&
        Objects.equals(this.preorderAllowed, complex.preorderAllowed) &&
        Objects.equals(this.allowSelectItems, complex.allowSelectItems) &&
        Objects.equals(this.items, complex.items);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, price, kind, paymentType, preorderAllowed, allowSelectItems, items);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Complex {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    preorderAllowed: ").append(toIndentedString(preorderAllowed)).append("\n");
    sb.append("    allowSelectItems: ").append(toIndentedString(allowSelectItems)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
