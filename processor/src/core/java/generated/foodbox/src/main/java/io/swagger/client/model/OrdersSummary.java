/*
 * API по питанию в образовательных учреждениях Москвы
 * API по питанию в образовательных учреждениях Москвы
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.OrderDaySummary;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Информация по предварительным заказам на 14 дней
 */
@Schema(description = "Информация по предварительным заказам на 14 дней")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-13T21:55:36.524+03:00[Europe/Moscow]")public class OrdersSummary {

  @SerializedName("forbiddenDays")
  private Integer forbiddenDays = null;

  @SerializedName("orderSum14Days")
  private Long orderSum14Days = null;

  @SerializedName("orderSum3Days")
  private Long orderSum3Days = null;

  @SerializedName("schedule")
  private List<OrderDaySummary> schedule = null;
  public OrdersSummary forbiddenDays(Integer forbiddenDays) {
    this.forbiddenDays = forbiddenDays;
    return this;
  }

  

  /**
  * Количество дней запрещенных для редактирования
  * minimum: 1
  * maximum: 3
  * @return forbiddenDays
  **/
  @Schema(description = "Количество дней запрещенных для редактирования")
  public Integer getForbiddenDays() {
    return forbiddenDays;
  }
  public void setForbiddenDays(Integer forbiddenDays) {
    this.forbiddenDays = forbiddenDays;
  }
  public OrdersSummary orderSum14Days(Long orderSum14Days) {
    this.orderSum14Days = orderSum14Days;
    return this;
  }

  

  /**
  * Сумма заказа в копейках на 14 дней вперед, включая текущий
  * @return orderSum14Days
  **/
  @Schema(required = true, description = "Сумма заказа в копейках на 14 дней вперед, включая текущий")
  public Long getOrderSum14Days() {
    return orderSum14Days;
  }
  public void setOrderSum14Days(Long orderSum14Days) {
    this.orderSum14Days = orderSum14Days;
  }
  public OrdersSummary orderSum3Days(Long orderSum3Days) {
    this.orderSum3Days = orderSum3Days;
    return this;
  }

  

  /**
  * Сумма заказа в копейках на 3 дня вперед, включая текущий
  * @return orderSum3Days
  **/
  @Schema(required = true, description = "Сумма заказа в копейках на 3 дня вперед, включая текущий")
  public Long getOrderSum3Days() {
    return orderSum3Days;
  }
  public void setOrderSum3Days(Long orderSum3Days) {
    this.orderSum3Days = orderSum3Days;
  }
  public OrdersSummary schedule(List<OrderDaySummary> schedule) {
    this.schedule = schedule;
    return this;
  }

  public OrdersSummary addScheduleItem(OrderDaySummary scheduleItem) {
    if (this.schedule == null) {
      this.schedule = new ArrayList<OrderDaySummary>();
    }
    this.schedule.add(scheduleItem);
    return this;
  }

  /**
  * Список рабочих/нерабочих дней на 14 дней вперёд в школе, где зарегистрирован клиент
  * @return schedule
  **/
  @Schema(description = "Список рабочих/нерабочих дней на 14 дней вперёд в школе, где зарегистрирован клиент")
  public List<OrderDaySummary> getSchedule() {
    return schedule;
  }
  public void setSchedule(List<OrderDaySummary> schedule) {
    this.schedule = schedule;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrdersSummary ordersSummary = (OrdersSummary) o;
    return Objects.equals(this.forbiddenDays, ordersSummary.forbiddenDays) &&
        Objects.equals(this.orderSum14Days, ordersSummary.orderSum14Days) &&
        Objects.equals(this.orderSum3Days, ordersSummary.orderSum3Days) &&
        Objects.equals(this.schedule, ordersSummary.schedule);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(forbiddenDays, orderSum14Days, orderSum3Days, schedule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdersSummary {\n");
    
    sb.append("    forbiddenDays: ").append(toIndentedString(forbiddenDays)).append("\n");
    sb.append("    orderSum14Days: ").append(toIndentedString(orderSum14Days)).append("\n");
    sb.append("    orderSum3Days: ").append(toIndentedString(orderSum3Days)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
