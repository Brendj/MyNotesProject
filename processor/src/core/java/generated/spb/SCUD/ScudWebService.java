
package generated.spb.SCUD;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ScudWebService", targetNamespace = "http://petersburgedu.ru/service/webservice/SCUD/wsdl", wsdlLocation = "META-INF/spb/SCUDWebService.wsdl")
public class ScudWebService
    extends Service
{
    private final static String WSDL_LOCATION = "META-INF/spb/SCUDWebService.wsdl";
    private final static Logger logger = Logger.getLogger(ScudWebService.class.getName());

    private final static URL SCUDWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException SCUDWEBSERVICE_EXCEPTION;
    private final static QName SCUDWEBSERVICE_QNAME = new QName("http://petersburgedu.ru/service/webservice/SCUD/wsdl", "ScudWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        URL baseUrl = null;
        try {
            baseUrl = ScudWebService.class.getResource(".");
            url = new URL(baseUrl, ScudWebService.class.getClassLoader().getResource(WSDL_LOCATION).getPath());
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
            logger.warning("Failed to create URL for the wsdl Location: 'META-INF/spb/SCUDWebService.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        SCUDWEBSERVICE_WSDL_LOCATION = url;
        SCUDWEBSERVICE_EXCEPTION = e;
    }

    public ScudWebService() {
        super(__getWsdlLocation(), SCUDWEBSERVICE_QNAME);
    }

    public ScudWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SCUDWEBSERVICE_QNAME, features);
    }

    public ScudWebService(URL wsdlLocation) {
        super(wsdlLocation, SCUDWEBSERVICE_QNAME);
    }

    public ScudWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SCUDWEBSERVICE_QNAME, features);
    }

    public ScudWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ScudWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PushScudPort
     */
    @WebEndpoint(name = "pushScudPort")
    public PushScudPort getPushScudPort() {
        return super.getPort(new QName("http://petersburgedu.ru/service/webservice/SCUD/wsdl", "pushScudPort"), PushScudPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PushScudPort
     */
    @WebEndpoint(name = "pushScudPort")
    public PushScudPort getPushScudPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://petersburgedu.ru/service/webservice/SCUD/wsdl", "pushScudPort"), PushScudPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SCUDWEBSERVICE_EXCEPTION!= null) {
            throw SCUDWEBSERVICE_EXCEPTION;
        }
        return SCUDWEBSERVICE_WSDL_LOCATION;
    }

}
