
package generated.spb.register;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;


/**
 * ������ ������ � ������� �������
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "PersonWebService", targetNamespace = "http://85.143.161.170:8080/webservice/food_benefits_full/wsdl", wsdlLocation = "META-INF/spb/SpbRegistryService.wsdl")
public class PersonWebService
    extends Service
{

    private final static String WSDL_LOCATION = "META-INF/spb/SpbRegistryService.wsdl";
    private final static URL PERSONWEBSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(generated.spb.register.PersonWebService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = generated.spb.register.PersonWebService.class.getResource(".");
            url = new URL(baseUrl, PersonWebService.class.getClassLoader().getResource(WSDL_LOCATION).getPath());
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location META-INF/spb/SpbRegistryService.wsdl, retrying as a local file");
            logger.warning(e.getMessage());
        }
        PERSONWEBSERVICE_WSDL_LOCATION = url;
    }

    public PersonWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PersonWebService(String url) throws MalformedURLException {
        super(PERSONWEBSERVICE_WSDL_LOCATION, new QName(url, "PersonWebService"));
        //super(new URL(url), new QName(url, "PersonWebService"));
    }

    public PersonWebService() throws MalformedURLException {
        super(PERSONWEBSERVICE_WSDL_LOCATION, new QName("http://85.143.161.170:8080/webservice/food_benefits_full/wsdl", "PersonWebService"));
    }

    /**
     * 
     * @return
     *     returns QueryPersonPort
     */
    @WebEndpoint(name = "queryPersonPort")
    public QueryPersonPort getQueryPersonPort(String url) {
        return super.getPort(new QName(url, "queryPersonPort"), QueryPersonPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QueryPersonPort
     */
    @WebEndpoint(name = "queryPersonPort")
    public QueryPersonPort getQueryPersonPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://85.143.161.170:8080/webservice/food_benefits_full/wsdl", "queryPersonPort"), QueryPersonPort.class, features);
    }

}
