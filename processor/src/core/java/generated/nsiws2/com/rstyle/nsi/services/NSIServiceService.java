
package generated.nsiws2.com.rstyle.nsi.services;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "NSIServiceService", targetNamespace = "http://rstyle.com/nsi/services", wsdlLocation = "http://10.126.216.2:4422/em/nsiws2/v2/services/NSIService/WEB-INF/wsdl/NSIService.wsdl")
public class NSIServiceService
    extends Service
{

    private final static URL NSISERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException NSISERVICESERVICE_EXCEPTION;
    private final static QName NSISERVICESERVICE_QNAME = new QName("http://rstyle.com/nsi/services", "NSIServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://10.126.216.2:4422/em/nsiws2/v2/services/NSIService/WEB-INF/wsdl/NSIService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        NSISERVICESERVICE_WSDL_LOCATION = url;
        NSISERVICESERVICE_EXCEPTION = e;
    }

    public NSIServiceService() {
        super(__getWsdlLocation(), NSISERVICESERVICE_QNAME);
    }

    public NSIServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), NSISERVICESERVICE_QNAME/*, features*/);
    }

    public NSIServiceService(URL wsdlLocation) {
        super(wsdlLocation, NSISERVICESERVICE_QNAME);
    }

    public NSIServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, NSISERVICESERVICE_QNAME/*, features*/);
    }

    public NSIServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NSIServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName/*, features*/);
    }

    /**
     * 
     * @return
     *     returns NSIService
     */
    @WebEndpoint(name = "NSIService")
    public NSIService getNSIService() {
        return super.getPort(new QName("http://rstyle.com/nsi/services", "NSIService"), NSIService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NSIService
     */
    @WebEndpoint(name = "NSIService")
    public NSIService getNSIService(WebServiceFeature... features) {
        return super.getPort(new QName("http://rstyle.com/nsi/services", "NSIService"), NSIService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (NSISERVICESERVICE_EXCEPTION!= null) {
            throw NSISERVICESERVICE_EXCEPTION;
        }
        return NSISERVICESERVICE_WSDL_LOCATION;
    }

}
