/*
 * Copyright (c) 2018. Axetta LLC. All Rights Reserved.
 */

package generated.etp;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2018-10-25T19:25:31.752+04:00
 * Generated source version: 2.4.6
 * 
 */
@WebServiceClient(name = "Service", 
                  wsdlLocation = "file:/D:/Doc/ETP/servicev6_1_4.wsdl",
                  targetNamespace = "http://asguf.mos.ru/rkis_gu/coordinate/v6_1/") 
public class Service extends javax.xml.ws.Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://asguf.mos.ru/rkis_gu/coordinate/v6_1/", "Service");
    public final static QName CustomBindingIService = new QName("http://asguf.mos.ru/rkis_gu/coordinate/v6_1/", "CustomBinding_IService");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Doc/ETP/servicev6_1_4.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/D:/Doc/ETP/servicev6_1_4.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    /*public Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }*/

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    /*public Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }*/

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    /*public Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }*/

    /**
     *
     * @return
     *     returns IService
     */
    @WebEndpoint(name = "CustomBinding_IService")
    public IService getCustomBindingIService() {
        return super.getPort(CustomBindingIService, IService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IService
     */
    @WebEndpoint(name = "CustomBinding_IService")
    public IService getCustomBindingIService(WebServiceFeature... features) {
        return super.getPort(CustomBindingIService, IService.class, features);
    }

}
