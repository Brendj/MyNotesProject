
package generated.ru.gov.smev.artefacts.x.services.message_exchange._1;

import generated.ru.gov.smev.artefacts.x.services.message_exchange.types._1.*;
import generated.ru.gov.smev.artefacts.x.services.message_exchange.types.basic._1.Void;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * 
 *             ����� �������, ����������� ��������� ������� ����� �����,
 *             � ����� ������ �� �������������� ��������.
 *             ����� ����, ����� ���� ������ ������������ ������ ��������.
 *             ��������� ���� ��������� 2 �������� � ������ �������������� �������� �������,
 *             ���������������� "������ ������ ������� � �������� �����, ���� �� �����" �����������.
 *         
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SMEVMessageExchangePortType", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/1.2")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
        generated.ru.mos.rnip.xsd.services.forced_ackmowledgement._2_0.ObjectFactory.class,
        generated.ru.gov.smev.artefacts.x.services.message_exchange.types._1.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.export_charges._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.export_payments._2_0.ObjectFactory.class,
        generated.ru.gov.smev.artefacts.x.services.message_exchange.types.faults._1.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.refund._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.quittance._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.payment._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.charge._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.catalog._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.common._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.searchconditions._2_0.ObjectFactory.class,
        generated.ru.gov.smev.artefacts.x.services.message_exchange.types.basic._1.ObjectFactory.class,
        generated.ru.mos.rnip.xsd._package._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.budgetindex._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.organization._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.export_catalog._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.export_quittances._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.export_refunds._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.import_catalog._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.import_certificates._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.import_charges._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.import_chargestemplate._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.import_payments._2_0.ObjectFactory.class,
        generated.ru.mos.rnip.xsd.services.import_refunds._2_0.ObjectFactory.class
})
public interface SMEVMessageExchangePortType {


    /**
     * 
     *                 ������� ������.
     *                 ���� ������� ������� ������� � ���, ��� ���� ������������� � ���, ��� �����������
     *                 ����� ����� �� ��������� ������ �� ����� ���� ��������.
     *                 �������������� �������� ������� � ��-���������� ������ ��������.
     *                 ��� ������� ���������������� ������ ������ (qualified name) �������� //SendRequestRequest/PrimaryContent/element().
     *             
     * 
     * @param parameters
     * @return
     *     returns ru.gov.smev.artefacts.x.services.message_exchange.types._1.SendRequestResponse
     * @throws EndOfLifeException
     * @throws SignatureVerificationFaultException
     * @throws RecipientIsNotFoundException
     * @throws InvalidContentException
     * @throws AttachmentSizeLimitExceededException
     * @throws QuoteLimitExceededException
     * @throws MessageIsAlreadySentException
     * @throws InvalidMessageIdFormatException
     * @throws SenderIsNotRegisteredException
     * @throws AttachmentContentMiscoordinationException
     * @throws StaleMessageIdException
     * @throws AccessDeniedException
     * @throws DestinationOverflowException
     * @throws BusinessDataTypeIsNotSupportedException
     * @throws TransactionCodeInvalidException
     * @throws SMEVFailureException
     */
    @WebMethod(operationName = "SendRequest", action = "urn:SendRequest")
    @WebResult(name = "SendRequestResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
    public SendRequestResponse sendRequest(
        @WebParam(name = "SendRequestRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
        SendRequestRequest parameters)
        throws AccessDeniedException, AttachmentContentMiscoordinationException, AttachmentSizeLimitExceededException, BusinessDataTypeIsNotSupportedException, DestinationOverflowException, EndOfLifeException, InvalidContentException, InvalidMessageIdFormatException, MessageIsAlreadySentException, QuoteLimitExceededException, RecipientIsNotFoundException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, StaleMessageIdException, TransactionCodeInvalidException
    ;

    /**
     * 
     *                 ��� ��������� �� ���� �������� �������, ���� ��� �� �����.
     *             
     * 
     * @param parameters
     * @return
     *     returns ru.gov.smev.artefacts.x.services.message_exchange.types._1.SendResponseResponse
     * @throws RecipientIsNotFoundException
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws AttachmentSizeLimitExceededException
     * @throws QuoteLimitExceededException
     * @throws MessageIsAlreadySentException
     * @throws InvalidMessageIdFormatException
     * @throws SenderIsNotRegisteredException
     * @throws AttachmentContentMiscoordinationException
     * @throws StaleMessageIdException
     * @throws DestinationOverflowException
     * @throws BusinessDataTypeIsNotSupportedException
     * @throws IncorrectResponseContentTypeException
     * @throws SMEVFailureException
     */
    @WebMethod(operationName = "SendResponse", action = "urn:SendResponse")
    @WebResult(name = "SendResponseResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
    public SendResponseResponse sendResponse(
        @WebParam(name = "SendResponseRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
        SendResponseRequest parameters)
        throws AttachmentContentMiscoordinationException, AttachmentSizeLimitExceededException, BusinessDataTypeIsNotSupportedException, DestinationOverflowException, IncorrectResponseContentTypeException, InvalidContentException, InvalidMessageIdFormatException, MessageIsAlreadySentException, QuoteLimitExceededException, RecipientIsNotFoundException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, StaleMessageIdException
    ;

    /**
     * ��� ��������� �� ���� �������� ������� _��������_, ���� ��� �� �����.
     * 
     * @param parameters
     * @return
     *     returns ru.gov.smev.artefacts.x.services.message_exchange.types._1.GetRequestResponse
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws UnknownMessageTypeException
     * @throws SenderIsNotRegisteredException
     * @throws SMEVFailureException
     */
    @WebMethod(operationName = "GetRequest", action = "urn:GetRequest")
    @WebResult(name = "GetRequestResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
    public GetRequestResponse getRequest(
        @WebParam(name = "GetRequestRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
        GetRequestRequest parameters)
        throws InvalidContentException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, UnknownMessageTypeException
    ;

    /**
     * ��� ��������� �� ���� �������� ������� _��������_, ���� ��� �� �����.
     * 
     * @param parameters
     * @return
     *     returns ru.gov.smev.artefacts.x.services.message_exchange.types._1.GetStatusResponse
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws UnknownMessageTypeException
     * @throws SenderIsNotRegisteredException
     * @throws SMEVFailureException
     */
    @WebMethod(operationName = "GetStatus", action = "urn:GetStatus")
    @WebResult(name = "GetStatusResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
    public GetStatusResponse getStatus(
        @WebParam(name = "GetStatusRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
        GetStatusRequest parameters)
        throws InvalidContentException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, UnknownMessageTypeException
    ;

    /**
     * ��� ��������� �� ���� �������� ������� _�������_, ���� ��� �� �����.
     * 
     * @param parameters
     * @return
     *     returns ru.gov.smev.artefacts.x.services.message_exchange.types._1.GetResponseResponse
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws UnknownMessageTypeException
     * @throws SenderIsNotRegisteredException
     * @throws SMEVFailureException
     */
    @WebMethod(operationName = "GetResponse", action = "urn:GetResponse")
    @WebResult(name = "GetResponseResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
    public GetResponseResponse getResponse(
        @WebParam(name = "GetResponseRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
        GetResponseRequest parameters)
        throws InvalidContentException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, UnknownMessageTypeException
    ;

    /**
     * 
     *                 ������������� ��������� ��������� �� �������.
     *                 ������ ��������� ����� ��������� ��������� �������� GetRequest ��� GetResponse.
     *             
     * 
     * @param parameters
     * @return
     *     returns ru.gov.smev.artefacts.x.services.message_exchange.types.basic._1.Void
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws TargetMessageIsNotFoundException
     * @throws SenderIsNotRegisteredException
     * @throws SMEVFailureException
     */
    @WebMethod(operationName = "Ack", action = "urn:Ack")
    @WebResult(name = "AckResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
    public Void ack(
        @WebParam(name = "AckRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.2", partName = "parameters")
        AckRequest parameters)
        throws InvalidContentException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, TargetMessageIsNotFoundException
    ;

}
