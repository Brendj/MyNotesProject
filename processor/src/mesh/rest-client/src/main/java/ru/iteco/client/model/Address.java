/*
 * Copyright (c) 2020. Axetta LLC. All Rights Reserved.
 */

/*
 * API МЭШ.Контингент
 * Описание REST API МЭШ.Контингент
 *
 * OpenAPI spec version: 0.0.1
 * Contact: fixme@ktelabs.ru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.iteco.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Адрес
 */
@Schema(description = "Адрес")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-28T06:28:05.879Z[GMT]")
public class Address {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("fias_id")
  private String fiasId = null;

  @SerializedName("unom")
  private Long unom = null;

  @SerializedName("flat")
  private String flat = null;

  @SerializedName("global_id")
  private Integer globalId = null;

  public Address id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор
   * @return id
  **/
  @Schema(required = true, description = "Идентификатор")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Address address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Адрес строкой
   * @return address
  **/
  @Schema(required = true, description = "Адрес строкой")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public Address fiasId(String fiasId) {
    this.fiasId = fiasId;
    return this;
  }

   /**
   * ФИАС код здания
   * @return fiasId
  **/
  @Schema(description = "ФИАС код здания")
  public String getFiasId() {
    return fiasId;
  }

  public void setFiasId(String fiasId) {
    this.fiasId = fiasId;
  }

  public Address unom(Long unom) {
    this.unom = unom;
    return this;
  }

   /**
   * БТИ код здания
   * @return unom
  **/
  @Schema(description = "БТИ код здания")
  public Long getUnom() {
    return unom;
  }

  public void setUnom(Long unom) {
    this.unom = unom;
  }

  public Address flat(String flat) {
    this.flat = flat;
    return this;
  }

   /**
   * Номер  квартиры
   * @return flat
  **/
  @Schema(description = "Номер  квартиры")
  public String getFlat() {
    return flat;
  }

  public void setFlat(String flat) {
    this.flat = flat;
  }

  public Address globalId(Integer globalId) {
    this.globalId = globalId;
    return this;
  }

   /**
   * Идентификатор из НСИ3
   * @return globalId
  **/
  @Schema(description = "Идентификатор из НСИ3")
  public Integer getGlobalId() {
    return globalId;
  }

  public void setGlobalId(Integer globalId) {
    this.globalId = globalId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.id, address.id) &&
        Objects.equals(this.address, address.address) &&
        Objects.equals(this.fiasId, address.fiasId) &&
        Objects.equals(this.unom, address.unom) &&
        Objects.equals(this.flat, address.flat) &&
        Objects.equals(this.globalId, address.globalId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, address, fiasId, unom, flat, globalId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    fiasId: ").append(toIndentedString(fiasId)).append("\n");
    sb.append("    unom: ").append(toIndentedString(unom)).append("\n");
    sb.append("    flat: ").append(toIndentedString(flat)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
