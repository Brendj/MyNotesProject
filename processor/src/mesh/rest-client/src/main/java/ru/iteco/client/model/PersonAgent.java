/*
 * Copyright (c) 2020. Axetta LLC. All Rights Reserved.
 */

/*
 * API МЭШ.Контингент
 * Описание REST API МЭШ.Контингент
 *
 * OpenAPI spec version: 0.0.1
 * Contact: fixme@ktelabs.ru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.iteco.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
/**
 * Связь персоны и представителя
 */
@Schema(description = "Связь персоны и представителя")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-28T06:28:05.879Z[GMT]")
public class PersonAgent {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("person_id")
  private UUID personId = null;

  @SerializedName("agent_person_id")
  private UUID agentPersonId = null;

  @SerializedName("agent_type_id")
  private Integer agentTypeId = null;

  @SerializedName("validation_state_id")
  private Integer validationStateId = null;

  @SerializedName("validated_at")
  private OffsetDateTime validatedAt = null;

  @SerializedName("actual_from")
  private OffsetDateTime actualFrom = null;

  @SerializedName("actual_to")
  private OffsetDateTime actualTo = null;

  @SerializedName("created_by")
  private UUID createdBy = null;

  @SerializedName("updated_by")
  private UUID updatedBy = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("agent_type")
  private AgentType agentType = null;

  @SerializedName("agent_person")
  private PersonInfo agentPerson = null;

  @SerializedName("validation_errors")
  private String validationErrors = null;

  public PersonAgent id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор
   * @return id
  **/
  @Schema(required = true, description = "Идентификатор")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PersonAgent personId(UUID personId) {
    this.personId = personId;
    return this;
  }

   /**
   * Идентификатор персоны
   * @return personId
  **/
  @Schema(description = "Идентификатор персоны")
  public UUID getPersonId() {
    return personId;
  }

  public void setPersonId(UUID personId) {
    this.personId = personId;
  }

  public PersonAgent agentPersonId(UUID agentPersonId) {
    this.agentPersonId = agentPersonId;
    return this;
  }

   /**
   * Идентификатор персоны представителя
   * @return agentPersonId
  **/
  @Schema(description = "Идентификатор персоны представителя")
  public UUID getAgentPersonId() {
    return agentPersonId;
  }

  public void setAgentPersonId(UUID agentPersonId) {
    this.agentPersonId = agentPersonId;
  }

  public PersonAgent agentTypeId(Integer agentTypeId) {
    this.agentTypeId = agentTypeId;
    return this;
  }

   /**
   * Идентификатор типа представительства (каталог НСИ3 &lt;a href&#x3D;\&quot;https://wiki.edu.mos.ru/pages/viewpage.action?pageId&#x3D;18393963\&quot;&gt;LEGAL_REPRESENT&lt;/href&gt;)
   * @return agentTypeId
  **/
  @Schema(required = true, description = "Идентификатор типа представительства (каталог НСИ3 <a href=\"https://wiki.edu.mos.ru/pages/viewpage.action?pageId=18393963\">LEGAL_REPRESENT</href>)")
  public Integer getAgentTypeId() {
    return agentTypeId;
  }

  public void setAgentTypeId(Integer agentTypeId) {
    this.agentTypeId = agentTypeId;
  }

  public PersonAgent validationStateId(Integer validationStateId) {
    this.validationStateId = validationStateId;
    return this;
  }

   /**
   * Статус проверки
   * @return validationStateId
  **/
  @Schema(description = "Статус проверки")
  public Integer getValidationStateId() {
    return validationStateId;
  }

  public void setValidationStateId(Integer validationStateId) {
    this.validationStateId = validationStateId;
  }

  public PersonAgent validatedAt(OffsetDateTime validatedAt) {
    this.validatedAt = validatedAt;
    return this;
  }

   /**
   * Дата проверки
   * @return validatedAt
  **/
  @Schema(description = "Дата проверки")
  public OffsetDateTime getValidatedAt() {
    return validatedAt;
  }

  public void setValidatedAt(OffsetDateTime validatedAt) {
    this.validatedAt = validatedAt;
  }

  public PersonAgent actualFrom(OffsetDateTime actualFrom) {
    this.actualFrom = actualFrom;
    return this;
  }

   /**
   * Дата и время начала действия связи
   * @return actualFrom
  **/
  @Schema(description = "Дата и время начала действия связи")
  public OffsetDateTime getActualFrom() {
    return actualFrom;
  }

  public void setActualFrom(OffsetDateTime actualFrom) {
    this.actualFrom = actualFrom;
  }

  public PersonAgent actualTo(OffsetDateTime actualTo) {
    this.actualTo = actualTo;
    return this;
  }

   /**
   * Дата и время окончания действия связи
   * @return actualTo
  **/
  @Schema(description = "Дата и время окончания действия связи")
  public OffsetDateTime getActualTo() {
    return actualTo;
  }

  public void setActualTo(OffsetDateTime actualTo) {
    this.actualTo = actualTo;
  }

  public PersonAgent createdBy(UUID createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Идентификатор системы-источника, создавшую запись
   * @return createdBy
  **/
  @Schema(description = "Идентификатор системы-источника, создавшую запись")
  public UUID getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UUID createdBy) {
    this.createdBy = createdBy;
  }

  public PersonAgent updatedBy(UUID updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Идентификатор системы-источника, изменившую запись
   * @return updatedBy
  **/
  @Schema(description = "Идентификатор системы-источника, изменившую запись")
  public UUID getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(UUID updatedBy) {
    this.updatedBy = updatedBy;
  }

  public PersonAgent createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Дата и время создания
   * @return createdAt
  **/
  @Schema(description = "Дата и время создания")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public PersonAgent updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Дата и время изменения
   * @return updatedAt
  **/
  @Schema(description = "Дата и время изменения")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public PersonAgent agentType(AgentType agentType) {
    this.agentType = agentType;
    return this;
  }

   /**
   * Get agentType
   * @return agentType
  **/
  @Schema(description = "")
  public AgentType getAgentType() {
    return agentType;
  }

  public void setAgentType(AgentType agentType) {
    this.agentType = agentType;
  }

  public PersonAgent agentPerson(PersonInfo agentPerson) {
    this.agentPerson = agentPerson;
    return this;
  }

   /**
   * Get agentPerson
   * @return agentPerson
  **/
  @Schema(description = "")
  public PersonInfo getAgentPerson() {
    return agentPerson;
  }

  public void setAgentPerson(PersonInfo agentPerson) {
    this.agentPerson = agentPerson;
  }

  public PersonAgent validationErrors(String validationErrors) {
    this.validationErrors = validationErrors;
    return this;
  }

   /**
   * Ошибки валидации из внешних систем
   * @return validationErrors
  **/
  @Schema(description = "Ошибки валидации из внешних систем")
  public String getValidationErrors() {
    return validationErrors;
  }

  public void setValidationErrors(String validationErrors) {
    this.validationErrors = validationErrors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonAgent personAgent = (PersonAgent) o;
    return Objects.equals(this.id, personAgent.id) &&
        Objects.equals(this.personId, personAgent.personId) &&
        Objects.equals(this.agentPersonId, personAgent.agentPersonId) &&
        Objects.equals(this.agentTypeId, personAgent.agentTypeId) &&
        Objects.equals(this.validationStateId, personAgent.validationStateId) &&
        Objects.equals(this.validatedAt, personAgent.validatedAt) &&
        Objects.equals(this.actualFrom, personAgent.actualFrom) &&
        Objects.equals(this.actualTo, personAgent.actualTo) &&
        Objects.equals(this.createdBy, personAgent.createdBy) &&
        Objects.equals(this.updatedBy, personAgent.updatedBy) &&
        Objects.equals(this.createdAt, personAgent.createdAt) &&
        Objects.equals(this.updatedAt, personAgent.updatedAt) &&
        Objects.equals(this.agentType, personAgent.agentType) &&
        Objects.equals(this.agentPerson, personAgent.agentPerson) &&
        Objects.equals(this.validationErrors, personAgent.validationErrors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, personId, agentPersonId, agentTypeId, validationStateId, validatedAt, actualFrom, actualTo, createdBy, updatedBy, createdAt, updatedAt, agentType, agentPerson, validationErrors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonAgent {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    agentPersonId: ").append(toIndentedString(agentPersonId)).append("\n");
    sb.append("    agentTypeId: ").append(toIndentedString(agentTypeId)).append("\n");
    sb.append("    validationStateId: ").append(toIndentedString(validationStateId)).append("\n");
    sb.append("    validatedAt: ").append(toIndentedString(validatedAt)).append("\n");
    sb.append("    actualFrom: ").append(toIndentedString(actualFrom)).append("\n");
    sb.append("    actualTo: ").append(toIndentedString(actualTo)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    agentType: ").append(toIndentedString(agentType)).append("\n");
    sb.append("    agentPerson: ").append(toIndentedString(agentPerson)).append("\n");
    sb.append("    validationErrors: ").append(toIndentedString(validationErrors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
