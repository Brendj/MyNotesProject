/*
 * Copyright (c) 2020. Axetta LLC. All Rights Reserved.
 */

/*
 * API МЭШ.Контингент
 * Описание REST API МЭШ.Контингент
 *
 * OpenAPI spec version: 0.0.1
 * Contact: fixme@ktelabs.ru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.iteco.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import org.threeten.bp.OffsetDateTime;
/**
 * Образовательная организация
 */
@Schema(description = "Образовательная организация")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-28T06:28:05.879Z[GMT]")
public class Organization {
  @SerializedName("global_id")
  private Integer globalId = null;

  @SerializedName("constituent_entity_id")
  private Integer constituentEntityId = null;

  @SerializedName("status_id")
  private Integer statusId = null;

  @SerializedName("actual_from")
  private OffsetDateTime actualFrom = null;

  @SerializedName("actual_to")
  private OffsetDateTime actualTo = null;

  public Organization globalId(Integer globalId) {
    this.globalId = globalId;
    return this;
  }

   /**
   * Идентификатор
   * @return globalId
  **/
  @Schema(required = true, description = "Идентификатор")
  public Integer getGlobalId() {
    return globalId;
  }

  public void setGlobalId(Integer globalId) {
    this.globalId = globalId;
  }

  public Organization constituentEntityId(Integer constituentEntityId) {
    this.constituentEntityId = constituentEntityId;
    return this;
  }

   /**
   * Код субъекта РФ
   * @return constituentEntityId
  **/
  @Schema(description = "Код субъекта РФ")
  public Integer getConstituentEntityId() {
    return constituentEntityId;
  }

  public void setConstituentEntityId(Integer constituentEntityId) {
    this.constituentEntityId = constituentEntityId;
  }

  public Organization statusId(Integer statusId) {
    this.statusId = statusId;
    return this;
  }

   /**
   * Статус
   * @return statusId
  **/
  @Schema(description = "Статус")
  public Integer getStatusId() {
    return statusId;
  }

  public void setStatusId(Integer statusId) {
    this.statusId = statusId;
  }

  public Organization actualFrom(OffsetDateTime actualFrom) {
    this.actualFrom = actualFrom;
    return this;
  }

   /**
   * Дата и время начала действия версии
   * @return actualFrom
  **/
  @Schema(description = "Дата и время начала действия версии")
  public OffsetDateTime getActualFrom() {
    return actualFrom;
  }

  public void setActualFrom(OffsetDateTime actualFrom) {
    this.actualFrom = actualFrom;
  }

  public Organization actualTo(OffsetDateTime actualTo) {
    this.actualTo = actualTo;
    return this;
  }

   /**
   * Дата и время окончания действия версии
   * @return actualTo
  **/
  @Schema(description = "Дата и время окончания действия версии")
  public OffsetDateTime getActualTo() {
    return actualTo;
  }

  public void setActualTo(OffsetDateTime actualTo) {
    this.actualTo = actualTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return Objects.equals(this.globalId, organization.globalId) &&
        Objects.equals(this.constituentEntityId, organization.constituentEntityId) &&
        Objects.equals(this.statusId, organization.statusId) &&
        Objects.equals(this.actualFrom, organization.actualFrom) &&
        Objects.equals(this.actualTo, organization.actualTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(globalId, constituentEntityId, statusId, actualFrom, actualTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organization {\n");
    
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    constituentEntityId: ").append(toIndentedString(constituentEntityId)).append("\n");
    sb.append("    statusId: ").append(toIndentedString(statusId)).append("\n");
    sb.append("    actualFrom: ").append(toIndentedString(actualFrom)).append("\n");
    sb.append("    actualTo: ").append(toIndentedString(actualTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
