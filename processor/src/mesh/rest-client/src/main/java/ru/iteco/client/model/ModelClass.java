/*
 * Copyright (c) 2020. Axetta LLC. All Rights Reserved.
 */

/*
 * API МЭШ.Контингент
 * Описание REST API МЭШ.Контингент
 *
 * OpenAPI spec version: 0.0.1
 * Contact: fixme@ktelabs.ru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.iteco.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
/**
 * Классы/группы ОУ
 */
@Schema(description = "Классы/группы ОУ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-28T06:28:05.879Z[GMT]")
public class ModelClass {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("uid")
  private UUID uid = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("organization_id")
  private Long organizationId = null;

  @SerializedName("building_id")
  private Long buildingId = null;

  @SerializedName("staff_ids")
  private List<Long> staffIds = null;

  @SerializedName("academic_year_id")
  private Integer academicYearId = null;

  @SerializedName("open_at")
  private LocalDate openAt = null;

  @SerializedName("close_at")
  private LocalDate closeAt = null;

  @SerializedName("parallel_id")
  private Integer parallelId = null;

  @SerializedName("education_stage_id")
  private Integer educationStageId = null;

  @SerializedName("letter")
  private String letter = null;

  @SerializedName("age_group_id")
  private Integer ageGroupId = null;

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("actual_from")
  private OffsetDateTime actualFrom = null;

  @SerializedName("actual_to")
  private OffsetDateTime actualTo = null;

  @SerializedName("created_by")
  private UUID createdBy = null;

  @SerializedName("updated_by")
  private UUID updatedBy = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("parallel")
  private Parallel parallel = null;

  @SerializedName("organization")
  private Organization organization = null;

  public ModelClass id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор
   * @return id
  **/
  @Schema(required = true, description = "Идентификатор")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ModelClass uid(UUID uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Идентификатор класса
   * @return uid
  **/
  @Schema(required = true, description = "Идентификатор класса")
  public UUID getUid() {
    return uid;
  }

  public void setUid(UUID uid) {
    this.uid = uid;
  }

  public ModelClass name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Название
   * @return name
  **/
  @Schema(required = true, description = "Название")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ModelClass organizationId(Long organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Идентификатор образовательной организации (каталог НСИ3 &lt;a href&#x3D;\&quot;https://wiki.edu.mos.ru/pages/viewpage.action?pageId&#x3D;13710039\&quot;&gt;ORGANIZATION_REGISTRY&lt;/href&gt;)
   * @return organizationId
  **/
  @Schema(required = true, description = "Идентификатор образовательной организации (каталог НСИ3 <a href=\"https://wiki.edu.mos.ru/pages/viewpage.action?pageId=13710039\">ORGANIZATION_REGISTRY</href>)")
  public Long getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(Long organizationId) {
    this.organizationId = organizationId;
  }

  public ModelClass buildingId(Long buildingId) {
    this.buildingId = buildingId;
    return this;
  }

   /**
   * Идентификатор здания (каталог НСИ3 &lt;a href&#x3D;\&quot;https://wiki.edu.mos.ru/pages/viewpage.action?pageId&#x3D;37240345\&quot;&gt;ORGANIZATION_REGISTRY_COM&lt;/href&gt;). Значение не контроллируется на наличие здания в реестре.
   * @return buildingId
  **/
  @Schema(description = "Идентификатор здания (каталог НСИ3 <a href=\"https://wiki.edu.mos.ru/pages/viewpage.action?pageId=37240345\">ORGANIZATION_REGISTRY_COM</href>). Значение не контроллируется на наличие здания в реестре.")
  public Long getBuildingId() {
    return buildingId;
  }

  public void setBuildingId(Long buildingId) {
    this.buildingId = buildingId;
  }

  public ModelClass staffIds(List<Long> staffIds) {
    this.staffIds = staffIds;
    return this;
  }

  public ModelClass addStaffIdsItem(Long staffIdsItem) {
    if (this.staffIds == null) {
      this.staffIds = new ArrayList<Long>();
    }
    this.staffIds.add(staffIdsItem);
    return this;
  }

   /**
   * Идентификаторы классных руководителей
   * @return staffIds
  **/
  @Schema(description = "Идентификаторы классных руководителей")
  public List<Long> getStaffIds() {
    return staffIds;
  }

  public void setStaffIds(List<Long> staffIds) {
    this.staffIds = staffIds;
  }

  public ModelClass academicYearId(Integer academicYearId) {
    this.academicYearId = academicYearId;
    return this;
  }

   /**
   * Идентификатор учебного года (каталог НСИ3 &lt;a href&#x3D;\&quot;https://wiki.edu.mos.ru/pages/viewpage.action?pageId&#x3D;18394031\&quot;&gt;НСИ ACADEMIC_YEAR&lt;/a&gt;)
   * @return academicYearId
  **/
  @Schema(description = "Идентификатор учебного года (каталог НСИ3 <a href=\"https://wiki.edu.mos.ru/pages/viewpage.action?pageId=18394031\">НСИ ACADEMIC_YEAR</a>)")
  public Integer getAcademicYearId() {
    return academicYearId;
  }

  public void setAcademicYearId(Integer academicYearId) {
    this.academicYearId = academicYearId;
  }

  public ModelClass openAt(LocalDate openAt) {
    this.openAt = openAt;
    return this;
  }

   /**
   * Дата открытия класса/группы
   * @return openAt
  **/
  @Schema(required = true, description = "Дата открытия класса/группы")
  public LocalDate getOpenAt() {
    return openAt;
  }

  public void setOpenAt(LocalDate openAt) {
    this.openAt = openAt;
  }

  public ModelClass closeAt(LocalDate closeAt) {
    this.closeAt = closeAt;
    return this;
  }

   /**
   * Дата закрытия классы/группы
   * @return closeAt
  **/
  @Schema(description = "Дата закрытия классы/группы")
  public LocalDate getCloseAt() {
    return closeAt;
  }

  public void setCloseAt(LocalDate closeAt) {
    this.closeAt = closeAt;
  }

  public ModelClass parallelId(Integer parallelId) {
    this.parallelId = parallelId;
    return this;
  }

   /**
   * Параллель (каталог НСИ3 &lt;a href&#x3D;\&quot;https://wiki.edu.mos.ru/pages/viewpage.action?pageId&#x3D;18394351\&quot;&gt;PARALLELS&lt;/href&gt;)
   * @return parallelId
  **/
  @Schema(description = "Параллель (каталог НСИ3 <a href=\"https://wiki.edu.mos.ru/pages/viewpage.action?pageId=18394351\">PARALLELS</href>)")
  public Integer getParallelId() {
    return parallelId;
  }

  public void setParallelId(Integer parallelId) {
    this.parallelId = parallelId;
  }

  public ModelClass educationStageId(Integer educationStageId) {
    this.educationStageId = educationStageId;
    return this;
  }

   /**
   * Уровень образования (каталог НСИ3 &lt;a href&#x3D;\&quot;https://wiki.edu.mos.ru/pages/viewpage.action?pageId&#x3D;18394370\&quot;&gt;EDUCATION_LEVEL&lt;/href&gt;)
   * @return educationStageId
  **/
  @Schema(required = true, description = "Уровень образования (каталог НСИ3 <a href=\"https://wiki.edu.mos.ru/pages/viewpage.action?pageId=18394370\">EDUCATION_LEVEL</href>)")
  public Integer getEducationStageId() {
    return educationStageId;
  }

  public void setEducationStageId(Integer educationStageId) {
    this.educationStageId = educationStageId;
  }

  public ModelClass letter(String letter) {
    this.letter = letter;
    return this;
  }

   /**
   * Буква класса
   * @return letter
  **/
  @Schema(description = "Буква класса")
  public String getLetter() {
    return letter;
  }

  public void setLetter(String letter) {
    this.letter = letter;
  }

  public ModelClass ageGroupId(Integer ageGroupId) {
    this.ageGroupId = ageGroupId;
    return this;
  }

   /**
   * Справочник возрастных категорий (каталог НСИ3 &lt;a href&#x3D;\&quot;https://wiki.edu.mos.ru/pages/viewpage.action?pageId&#x3D;18394236\&quot;&gt;AGE_GROUP&lt;/href&gt;)
   * @return ageGroupId
  **/
  @Schema(description = "Справочник возрастных категорий (каталог НСИ3 <a href=\"https://wiki.edu.mos.ru/pages/viewpage.action?pageId=18394236\">AGE_GROUP</href>)")
  public Integer getAgeGroupId() {
    return ageGroupId;
  }

  public void setAgeGroupId(Integer ageGroupId) {
    this.ageGroupId = ageGroupId;
  }

  public ModelClass notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Примечание
   * @return notes
  **/
  @Schema(description = "Примечание")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public ModelClass actualFrom(OffsetDateTime actualFrom) {
    this.actualFrom = actualFrom;
    return this;
  }

   /**
   * Дата и время начала действия версии
   * @return actualFrom
  **/
  @Schema(description = "Дата и время начала действия версии")
  public OffsetDateTime getActualFrom() {
    return actualFrom;
  }

  public void setActualFrom(OffsetDateTime actualFrom) {
    this.actualFrom = actualFrom;
  }

  public ModelClass actualTo(OffsetDateTime actualTo) {
    this.actualTo = actualTo;
    return this;
  }

   /**
   * Дата и время окончания действия версии
   * @return actualTo
  **/
  @Schema(description = "Дата и время окончания действия версии")
  public OffsetDateTime getActualTo() {
    return actualTo;
  }

  public void setActualTo(OffsetDateTime actualTo) {
    this.actualTo = actualTo;
  }

  public ModelClass createdBy(UUID createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Идентификатор системы-источника, создавшую запись
   * @return createdBy
  **/
  @Schema(description = "Идентификатор системы-источника, создавшую запись")
  public UUID getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UUID createdBy) {
    this.createdBy = createdBy;
  }

  public ModelClass updatedBy(UUID updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Идентификатор системы-источника, изменившую запись
   * @return updatedBy
  **/
  @Schema(description = "Идентификатор системы-источника, изменившую запись")
  public UUID getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(UUID updatedBy) {
    this.updatedBy = updatedBy;
  }

  public ModelClass createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Дата и время создания
   * @return createdAt
  **/
  @Schema(description = "Дата и время создания")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ModelClass updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Дата и время изменения
   * @return updatedAt
  **/
  @Schema(description = "Дата и время изменения")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public ModelClass parallel(Parallel parallel) {
    this.parallel = parallel;
    return this;
  }

   /**
   * Get parallel
   * @return parallel
  **/
  @Schema(description = "")
  public Parallel getParallel() {
    return parallel;
  }

  public void setParallel(Parallel parallel) {
    this.parallel = parallel;
  }

  public ModelClass organization(Organization organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @Schema(description = "")
  public Organization getOrganization() {
    return organization;
  }

  public void setOrganization(Organization organization) {
    this.organization = organization;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelClass propertyClass = (ModelClass) o;
    return Objects.equals(this.id, propertyClass.id) &&
        Objects.equals(this.uid, propertyClass.uid) &&
        Objects.equals(this.name, propertyClass.name) &&
        Objects.equals(this.organizationId, propertyClass.organizationId) &&
        Objects.equals(this.buildingId, propertyClass.buildingId) &&
        Objects.equals(this.staffIds, propertyClass.staffIds) &&
        Objects.equals(this.academicYearId, propertyClass.academicYearId) &&
        Objects.equals(this.openAt, propertyClass.openAt) &&
        Objects.equals(this.closeAt, propertyClass.closeAt) &&
        Objects.equals(this.parallelId, propertyClass.parallelId) &&
        Objects.equals(this.educationStageId, propertyClass.educationStageId) &&
        Objects.equals(this.letter, propertyClass.letter) &&
        Objects.equals(this.ageGroupId, propertyClass.ageGroupId) &&
        Objects.equals(this.notes, propertyClass.notes) &&
        Objects.equals(this.actualFrom, propertyClass.actualFrom) &&
        Objects.equals(this.actualTo, propertyClass.actualTo) &&
        Objects.equals(this.createdBy, propertyClass.createdBy) &&
        Objects.equals(this.updatedBy, propertyClass.updatedBy) &&
        Objects.equals(this.createdAt, propertyClass.createdAt) &&
        Objects.equals(this.updatedAt, propertyClass.updatedAt) &&
        Objects.equals(this.parallel, propertyClass.parallel) &&
        Objects.equals(this.organization, propertyClass.organization);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uid, name, organizationId, buildingId, staffIds, academicYearId, openAt, closeAt, parallelId, educationStageId, letter, ageGroupId, notes, actualFrom, actualTo, createdBy, updatedBy, createdAt, updatedAt, parallel, organization);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelClass {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    buildingId: ").append(toIndentedString(buildingId)).append("\n");
    sb.append("    staffIds: ").append(toIndentedString(staffIds)).append("\n");
    sb.append("    academicYearId: ").append(toIndentedString(academicYearId)).append("\n");
    sb.append("    openAt: ").append(toIndentedString(openAt)).append("\n");
    sb.append("    closeAt: ").append(toIndentedString(closeAt)).append("\n");
    sb.append("    parallelId: ").append(toIndentedString(parallelId)).append("\n");
    sb.append("    educationStageId: ").append(toIndentedString(educationStageId)).append("\n");
    sb.append("    letter: ").append(toIndentedString(letter)).append("\n");
    sb.append("    ageGroupId: ").append(toIndentedString(ageGroupId)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    actualFrom: ").append(toIndentedString(actualFrom)).append("\n");
    sb.append("    actualTo: ").append(toIndentedString(actualTo)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    parallel: ").append(toIndentedString(parallel)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
