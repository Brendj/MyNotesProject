/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.iteco.emias.kafka.Request;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Данные об освобождении от посещения ОО
 */
@Schema(description = "Данные об освобождении от посещения ОО")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-02-28T22:45:51.033+03:00[Europe/Moscow]")
public class PersonExemption {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("person_id")
  private String personId = null;

  @SerializedName("items")
  private List<PersonExemptionItem> items = null;

  @SerializedName("reason")
  private Integer reason = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  public PersonExemption id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор события
   * @return id
  **/
  @Schema(required = true, description = "Идентификатор события")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PersonExemption personId(String personId) {
    this.personId = personId;
    return this;
  }

   /**
   * Идентификатор персоны МЭШ.Контингента
   * @return personId
  **/
  @Schema(required = true, description = "Идентификатор персоны МЭШ.Контингента")
  public String getPersonId() {
    return personId;
  }

  public void setPersonId(String personId) {
    this.personId = personId;
  }

  public PersonExemption items(List<PersonExemptionItem> items) {
    this.items = items;
    return this;
  }

  public PersonExemption addItemsItem(PersonExemptionItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Данные о периодах освобождения
   * @return items
  **/
  @Schema(description = "Данные о периодах освобождения")
  public List<PersonExemptionItem> getItems() {
    return items;
  }

  public void setItems(List<PersonExemptionItem> items) {
    this.items = items;
  }

  public PersonExemption reason(Integer reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Основание: 1 - Справка 095/у 2 - Рекомендация по освобождению от посещения ОУ 
   * @return reason
  **/
  @Schema(description = "Основание: 1 - Справка 095/у 2 - Рекомендация по освобождению от посещения ОУ ")
  public Integer getReason() {
    return reason;
  }

  public void setReason(Integer reason) {
    this.reason = reason;
  }

  public PersonExemption createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Дата и время события
   * @return createdAt
  **/
  @Schema(required = true, description = "Дата и время события")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonExemption personExemption = (PersonExemption) o;
    return Objects.equals(this.id, personExemption.id) &&
        Objects.equals(this.personId, personExemption.personId) &&
        Objects.equals(this.items, personExemption.items) &&
        Objects.equals(this.reason, personExemption.reason) &&
        Objects.equals(this.createdAt, personExemption.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, personId, items, reason, createdAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonExemption {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
